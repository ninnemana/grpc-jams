// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pkg/auth/auth.proto

package auth

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	users "github.com/ninnemana/vinyl/pkg/users"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type HealthRequest struct {
	Uptime               string   `protobuf:"bytes,1,opt,name=uptime,proto3" json:"uptime,omitempty"`
	Machine              string   `protobuf:"bytes,2,opt,name=machine,proto3" json:"machine,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HealthRequest) Reset()         { *m = HealthRequest{} }
func (m *HealthRequest) String() string { return proto.CompactTextString(m) }
func (*HealthRequest) ProtoMessage()    {}
func (*HealthRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_adf4896e73d518a2, []int{0}
}

func (m *HealthRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HealthRequest.Unmarshal(m, b)
}
func (m *HealthRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HealthRequest.Marshal(b, m, deterministic)
}
func (m *HealthRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HealthRequest.Merge(m, src)
}
func (m *HealthRequest) XXX_Size() int {
	return xxx_messageInfo_HealthRequest.Size(m)
}
func (m *HealthRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HealthRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HealthRequest proto.InternalMessageInfo

func (m *HealthRequest) GetUptime() string {
	if m != nil {
		return m.Uptime
	}
	return ""
}

func (m *HealthRequest) GetMachine() string {
	if m != nil {
		return m.Machine
	}
	return ""
}

type HealthResponse struct {
	Uptime               string   `protobuf:"bytes,1,opt,name=uptime,proto3" json:"uptime,omitempty"`
	Machine              string   `protobuf:"bytes,2,opt,name=machine,proto3" json:"machine,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HealthResponse) Reset()         { *m = HealthResponse{} }
func (m *HealthResponse) String() string { return proto.CompactTextString(m) }
func (*HealthResponse) ProtoMessage()    {}
func (*HealthResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_adf4896e73d518a2, []int{1}
}

func (m *HealthResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HealthResponse.Unmarshal(m, b)
}
func (m *HealthResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HealthResponse.Marshal(b, m, deterministic)
}
func (m *HealthResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HealthResponse.Merge(m, src)
}
func (m *HealthResponse) XXX_Size() int {
	return xxx_messageInfo_HealthResponse.Size(m)
}
func (m *HealthResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HealthResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HealthResponse proto.InternalMessageInfo

func (m *HealthResponse) GetUptime() string {
	if m != nil {
		return m.Uptime
	}
	return ""
}

func (m *HealthResponse) GetMachine() string {
	if m != nil {
		return m.Machine
	}
	return ""
}

type AuthRequest struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthRequest) Reset()         { *m = AuthRequest{} }
func (m *AuthRequest) String() string { return proto.CompactTextString(m) }
func (*AuthRequest) ProtoMessage()    {}
func (*AuthRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_adf4896e73d518a2, []int{2}
}

func (m *AuthRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthRequest.Unmarshal(m, b)
}
func (m *AuthRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthRequest.Marshal(b, m, deterministic)
}
func (m *AuthRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthRequest.Merge(m, src)
}
func (m *AuthRequest) XXX_Size() int {
	return xxx_messageInfo_AuthRequest.Size(m)
}
func (m *AuthRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AuthRequest proto.InternalMessageInfo

func (m *AuthRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *AuthRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type AuthResponse struct {
	Token                string      `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	User                 *users.User `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *AuthResponse) Reset()         { *m = AuthResponse{} }
func (m *AuthResponse) String() string { return proto.CompactTextString(m) }
func (*AuthResponse) ProtoMessage()    {}
func (*AuthResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_adf4896e73d518a2, []int{3}
}

func (m *AuthResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthResponse.Unmarshal(m, b)
}
func (m *AuthResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthResponse.Marshal(b, m, deterministic)
}
func (m *AuthResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthResponse.Merge(m, src)
}
func (m *AuthResponse) XXX_Size() int {
	return xxx_messageInfo_AuthResponse.Size(m)
}
func (m *AuthResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AuthResponse proto.InternalMessageInfo

func (m *AuthResponse) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *AuthResponse) GetUser() *users.User {
	if m != nil {
		return m.User
	}
	return nil
}

func init() {
	proto.RegisterType((*HealthRequest)(nil), "auth.HealthRequest")
	proto.RegisterType((*HealthResponse)(nil), "auth.HealthResponse")
	proto.RegisterType((*AuthRequest)(nil), "auth.AuthRequest")
	proto.RegisterType((*AuthResponse)(nil), "auth.AuthResponse")
}

func init() { proto.RegisterFile("pkg/auth/auth.proto", fileDescriptor_adf4896e73d518a2) }

var fileDescriptor_adf4896e73d518a2 = []byte{
	// 538 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x53, 0xcd, 0x8e, 0xd3, 0x30,
	0x10, 0x26, 0xd5, 0x76, 0x77, 0xf1, 0x96, 0x8a, 0xf5, 0x46, 0xa8, 0x0a, 0x68, 0xb1, 0x72, 0x61,
	0xf9, 0xd9, 0xa4, 0x94, 0x0b, 0x5a, 0x0e, 0x90, 0x45, 0x48, 0x20, 0x21, 0x81, 0x2a, 0xb8, 0x70,
	0xf3, 0x66, 0x07, 0xc7, 0x34, 0xb1, 0x8d, 0xed, 0xb4, 0xec, 0x15, 0x71, 0xe3, 0x56, 0x5e, 0x80,
	0x0b, 0xcf, 0xc0, 0x83, 0xf0, 0x02, 0x08, 0x78, 0x10, 0x14, 0x3b, 0x2d, 0xad, 0xe0, 0xc4, 0xc5,
	0x99, 0xf9, 0xc6, 0xf3, 0x7d, 0x33, 0xe3, 0x09, 0xda, 0x53, 0x13, 0x96, 0xd2, 0xda, 0x16, 0xee,
	0x48, 0x94, 0x96, 0x56, 0xe2, 0x8d, 0xc6, 0x8e, 0x42, 0x26, 0x99, 0x74, 0x40, 0xda, 0x58, 0x3e,
	0x16, 0x5d, 0x61, 0x52, 0xb2, 0x12, 0x52, 0xaa, 0x78, 0x4a, 0x85, 0x90, 0x96, 0x5a, 0x2e, 0x85,
	0x69, 0xa3, 0xb7, 0xdc, 0x27, 0x3f, 0x64, 0x20, 0x0e, 0xcd, 0x8c, 0x32, 0x06, 0x3a, 0x95, 0xca,
	0xdd, 0xf8, 0xc7, 0xed, 0x21, 0xe3, 0xb6, 0xa8, 0x4f, 0x92, 0x5c, 0x56, 0xa9, 0xe0, 0x42, 0x40,
	0x45, 0x05, 0x4d, 0xa7, 0x5c, 0x9c, 0x95, 0x69, 0x53, 0x57, 0x6d, 0x40, 0x1b, 0x7f, 0xfa, 0x8c,
	0x38, 0x43, 0x17, 0x1e, 0x03, 0x2d, 0x6d, 0x31, 0x86, 0xb7, 0x35, 0x18, 0x8b, 0x2f, 0xa1, 0xcd,
	0x5a, 0x59, 0x5e, 0xc1, 0x20, 0x20, 0xc1, 0xc1, 0xf9, 0x71, 0xeb, 0xe1, 0x01, 0xda, 0xaa, 0x68,
	0x5e, 0x70, 0x01, 0x83, 0x8e, 0x0b, 0x2c, 0xdc, 0xf8, 0x18, 0xf5, 0x17, 0x14, 0x46, 0x49, 0x61,
	0xe0, 0x3f, 0x38, 0xee, 0xa3, 0x9d, 0xac, 0xfe, 0x53, 0x44, 0x88, 0xba, 0x50, 0x51, 0x5e, 0xb6,
	0xf9, 0xde, 0xc1, 0x11, 0xda, 0x56, 0xd4, 0x98, 0x99, 0xd4, 0xa7, 0x6d, 0xfe, 0xd2, 0x8f, 0x1f,
	0xa1, 0x9e, 0x27, 0x68, 0x4b, 0x08, 0x51, 0xd7, 0xca, 0x09, 0x88, 0x05, 0x83, 0x73, 0xf0, 0x55,
	0xb4, 0xd1, 0x34, 0xef, 0xb2, 0x77, 0x46, 0x3b, 0x89, 0x9f, 0xc4, 0x4b, 0x03, 0x7a, 0xec, 0x02,
	0xa3, 0x8f, 0x1d, 0xd4, 0x6f, 0x78, 0x40, 0x58, 0x9e, 0xbb, 0xd1, 0xe2, 0x0f, 0x01, 0xda, 0xf4,
	0xfd, 0xe1, 0xbd, 0xc4, 0xbd, 0xe9, 0xda, 0xc0, 0xa2, 0x70, 0x1d, 0xf4, 0xfa, 0xf1, 0xb3, 0x79,
	0x76, 0x17, 0xf7, 0x3c, 0x48, 0x1e, 0x16, 0x90, 0x4f, 0xa2, 0x83, 0x31, 0xd8, 0x5a, 0x0b, 0x43,
	0x6c, 0x01, 0x24, 0xaf, 0xb5, 0x06, 0x61, 0x89, 0xb1, 0xd4, 0x02, 0x91, 0xaf, 0x1d, 0x68, 0x40,
	0x4f, 0x79, 0x0e, 0xef, 0xbf, 0xfd, 0xfa, 0xd4, 0xe9, 0xe3, 0x9e, 0x5f, 0xa3, 0xc2, 0x6b, 0x6b,
	0xdf, 0x60, 0x5b, 0x18, 0xe0, 0x5d, 0x2f, 0xbb, 0x32, 0xb5, 0x08, 0xaf, 0x42, 0x6d, 0x1d, 0xf7,
	0xe6, 0xd9, 0x4d, 0xbc, 0x96, 0x19, 0x5d, 0x7e, 0x2a, 0x99, 0x21, 0x94, 0x34, 0x0d, 0x13, 0x2e,
	0xac, 0xf4, 0xda, 0x67, 0xc6, 0x42, 0xe5, 0xa4, 0xb7, 0xe2, 0xae, 0x93, 0x3e, 0xfe, 0x1a, 0xcc,
	0xb3, 0x2f, 0x01, 0x06, 0xb4, 0xdd, 0x10, 0x90, 0xec, 0xf9, 0x13, 0x7c, 0xed, 0x45, 0xc1, 0x4d,
	0x63, 0x91, 0x19, 0x2f, 0x4b, 0xc2, 0xf8, 0x14, 0x08, 0xcd, 0x73, 0x30, 0x86, 0x58, 0x49, 0xdc,
	0xa6, 0x91, 0x53, 0x6a, 0x69, 0x7c, 0x1d, 0x87, 0x85, 0xb5, 0xca, 0x1c, 0xa5, 0xcb, 0x4d, 0x4c,
	0xa4, 0x66, 0xd1, 0x2e, 0x2d, 0xe1, 0xdd, 0x83, 0x25, 0x94, 0xcb, 0x6a, 0xd4, 0x1d, 0x26, 0xc3,
	0xe4, 0x76, 0x14, 0x52, 0xc5, 0x93, 0x26, 0xba, 0x1a, 0xbc, 0xd1, 0x09, 0x3a, 0xa3, 0x8b, 0x54,
	0xa9, 0xb2, 0x7d, 0x8f, 0xf4, 0x8d, 0x91, 0xe2, 0xe8, 0x2f, 0xe4, 0xfb, 0x8f, 0xfd, 0x73, 0x9f,
	0x7f, 0xee, 0x07, 0xaf, 0xdc, 0xaf, 0x76, 0xb2, 0xe9, 0xb6, 0xfb, 0xce, 0xef, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x54, 0x1d, 0x54, 0x64, 0x8e, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AuthenticationClient is the client API for Authentication service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AuthenticationClient interface {
	Health(ctx context.Context, in *HealthRequest, opts ...grpc.CallOption) (*HealthResponse, error)
	Authenticate(ctx context.Context, in *AuthRequest, opts ...grpc.CallOption) (*AuthResponse, error)
}

type authenticationClient struct {
	cc *grpc.ClientConn
}

func NewAuthenticationClient(cc *grpc.ClientConn) AuthenticationClient {
	return &authenticationClient{cc}
}

func (c *authenticationClient) Health(ctx context.Context, in *HealthRequest, opts ...grpc.CallOption) (*HealthResponse, error) {
	out := new(HealthResponse)
	err := c.cc.Invoke(ctx, "/auth.Authentication/Health", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authenticationClient) Authenticate(ctx context.Context, in *AuthRequest, opts ...grpc.CallOption) (*AuthResponse, error) {
	out := new(AuthResponse)
	err := c.cc.Invoke(ctx, "/auth.Authentication/Authenticate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AuthenticationServer is the server API for Authentication service.
type AuthenticationServer interface {
	Health(context.Context, *HealthRequest) (*HealthResponse, error)
	Authenticate(context.Context, *AuthRequest) (*AuthResponse, error)
}

// UnimplementedAuthenticationServer can be embedded to have forward compatible implementations.
type UnimplementedAuthenticationServer struct {
}

func (*UnimplementedAuthenticationServer) Health(ctx context.Context, req *HealthRequest) (*HealthResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Health not implemented")
}
func (*UnimplementedAuthenticationServer) Authenticate(ctx context.Context, req *AuthRequest) (*AuthResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Authenticate not implemented")
}

func RegisterAuthenticationServer(s *grpc.Server, srv AuthenticationServer) {
	s.RegisterService(&_Authentication_serviceDesc, srv)
}

func _Authentication_Health_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HealthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthenticationServer).Health(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/auth.Authentication/Health",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthenticationServer).Health(ctx, req.(*HealthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Authentication_Authenticate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthenticationServer).Authenticate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/auth.Authentication/Authenticate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthenticationServer).Authenticate(ctx, req.(*AuthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Authentication_serviceDesc = grpc.ServiceDesc{
	ServiceName: "auth.Authentication",
	HandlerType: (*AuthenticationServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Health",
			Handler:    _Authentication_Health_Handler,
		},
		{
			MethodName: "Authenticate",
			Handler:    _Authentication_Authenticate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pkg/auth/auth.proto",
}
